# CREATE A TREE -------------------------------------------------------------
n_samples <- 2709
# CREATE SOME METADATA ----------------------------------------------------
id <- tree2$tip.label
set.seed(42)
grp <- sample(LETTERS[1:n_grp], size = n_samples, replace = T)
#rm(dat)
dat <- tibble::tibble(id = id,
grp = grp)
# PLOT THE TREE -----------------------------------------------------------
p1 <- ggtree(tree2)
metat <- p1$data %>%
dplyr::inner_join(dat, c('label' = 'id'))
p2 <- p1 +
geom_point(data = metat,
aes(x = x,
y = y,
#                 colour = grp,
label = id))
plotly::ggplotly(p2)
p1
knitr::opts_chunk$set(echo = TRUE)
```{r cars}
```{r setup, include=FALSE}
r setup, include=FALSE
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
getwd()
readxl::read_xlsx("~$Plant_datasheet.xlsx")
readxl::read_xlsx("Plant_datasheet.xlsx")
growth_data<-readxl::read_xlsx("Plant_datasheet.xlsx")
boxplot(growth_data$Vine_length_day_13~growth_data$Treatment)
boxplot(Vine_length_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Vine length"
)
boxplot(Vine_length_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Vine length",
col="dark_green"
)
boxplot(Vine_length_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Vine length",
col="darkgreen"
)
growth_data$Treatment
growth_data$Treatment <- factor(data$names , levels=c("Control", "0.5", "0.1", "0.01", "2E-3"))
growth_data$Treatment <- factor(growth_data$Treatment , levels=c("Control", "0.5", "0.1", "0.01", "2E-3"))
boxplot(Vine_length_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Vine length",
col="darkgreen"
)
summary(growth_data)
Vine_13_model = lm(Vine_length_day_13 ~ Treatment,
data=growth_data)
anova(Vine_13_model)
summary(Vine_13_model)
growth_data
growth_data
boxplot(N_leaves_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Vine length",
col="darkgreen"
)
boxplot(N_leaves_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Leaf number, day 13",
col="darkgreen"
)
plot(N_leaves_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Leaf number, day 13",
col="darkgreen"
)
scatter(N_leaves_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Leaf number, day 13",
col="darkgreen"
)
library(ggplot2)
library(violplot)
install.packages("violplot")
#install.packages("violplot")
library(violplot)
barplot(N_leaves_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Leaf number, day 13",
col="darkgreen"
)
boxplot(N_leaves_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Leaf number, day 13",
col="darkgreen"
)
Leaves_13_model = lm(N_leaves_day_13 ~ Treatment,
data=growth_data)
anova(Leaves_13_model)
summary(Leaves_13_model)
boxplot(Largest_leaf_day_13~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Size of largest leaf, day 13",
col="darkgreen"
)
boxplot(Largest_leaf_day_13_cm^2~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Size of largest leaf, day 13",
col="darkgreen"
)
boxplot(`Largest_leaf_day_13_cm^2`~Treatment,
data=growth_data,
xlab="Calcium concentration",
ylab="Size of largest leaf, day 13",
col="darkgreen"
)
Leaf_area_13_model = lm(`Largest_leaf_day_13_cm^2` ~ Treatment,
data=growth_data)
anova(Leaf_area_13_model)
growth_data<-readxl::read_xlsx("Plant_datasheet.xlsx") #Import the data
knitr::opts_chunk$set(echo = TRUE)
library(agricolae)
update.packages("htmltools")
update.packages("htmltools")
library(agricolae)
update.packages(htmltools)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
library(agricolae)
library(htmltools)
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
install.packages("htmltools")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
updateR()
install.packages("installr")
library(installr)
updateR()
BiocManager::install("xfun")
BiocManager::install("WGCNA")
BiocManager::install("WGCNA", force = T)
library(WGCNA);
devtools::install_github("larabreithaupt/seastaR")
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("larabreithaupt/seastaR")
install.packages("tidyverse")
install.packages("tidyverse")
devtools::install_github("larabreithaupt/seastaR")
update.packages()
devtools::install_github("larabreithaupt/seastaR")
update.packages("rlang")
devtools::install_github("larabreithaupt/seastaR")
devtools::install_github("larabreithaupt/seastaR")
update.packages("rlang")
devtools::install_github("larabreithaupt/seastaR")
detach("package:rlang")
detach("packages:rlang")
detach("package::rlang")
detach(package::rlang)
detach(package:rlang)
detach(package:rlang, unload=T)
detach(package:rlang, unload=True)
detach(package:'rlang', unload=TRUE)
rlang
rlang()
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
devtools::install_github("larabreithaupt/seastaR")
devtools::install_github("larabreithaupt/seastaR", dependencies = T)
install.packages("ape")
devtools::install_github("larabreithaupt/seastaR", dependencies = T)
contigs <- read.table("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/", sep="\_")
contigs <- read.table("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/", sep="\\_")
contigs <- read.table("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/", sep="_")
contigs <- read.table("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/all_contig_names.txt", sep="_")
contigs
big<-subset(contigs, contigs$V2>47)
big
big<-subset(contigs, contigs$V2<47)
big
small<-subset(contigs, contigs$V2>46)
big_genome_length<-sum(big$V8)
big_genome_length
small_genome_length<-sum(small$V8)
small_genome_length
276654895/(276654895+3594379131)
276654895/3594379131
install.packages("RCrawler") #A web-scraping library to collect the USDA data
install.packages("RCrawler")
library(Rcrawler)
Rcrawler(Website = "http://r3ap3rpy.pythonanywhere.com/", no_cores = 4, no_conn = 4, Obeyrobots = TRUE)
color_GWAS_hits<-read.delim("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/Hesperis_repository/GWAS/Hesperis_color_test.assoc.txt")
head(color_GWAS_hits)
View(color_GWAS_hits)
library(qqman)
install.packages("qqman")
#install.packages("qqman")
library(qqman)
manhattan(color_GWAS_hits, chr="chr", bp="ps", snp="SNP", p="p_lrt" )
manhattan(color_GWAS_hits, chr="chr", bp="ps", snp="ps", p="p_lrt")
color_GWAS_hits$scafnum<-str_split(color_GWAS_hits$chr, "_")[2]
library(stringr)
color_GWAS_hits$scafnum<-str_split(color_GWAS_hits$chr, "_")[2]
color_GWAS_hits$scafnum<-str_split(color_GWAS_hits$chr, "_")
color_GWAS_hits$scafnum<-str_split_i(color_GWAS_hits$chr, "_", -1)
library(stringr)
color_GWAS_hits$scafnum<-str_split_i(color_GWAS_hits$chr, "_", -1)
color_GWAS_hits$scafnum<-str_split_i(color_GWAS_hits$chr, "_")[[1]]
library(dplyr)
library(stringr)
library(tidyr)
#install.packages("qqman")
library(qqman)
color_GWAS_hits<-read.delim("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/Hesperis_repository/GWAS/Hesperis_color_test.assoc.txt")
test<-color_GWAS_hits %>%separate(chr, c(NA, "scaf_num"), "_")
test<-color_GWAS_hits %>%separate(chr, c("chr", NA, "scaf_num"), "_")
test<-color_GWAS_hits %>%separate(chr, c(NA, "scaf_num"), "_")
test<-color_GWAS_hits %>%separate(chr, c(NA, "scaf_num"), "_", remove = F)
View(test)
color_GWAS_hits<-color_GWAS_hits %>%separate(chr, c(NA, "scaf_num"), "_", remove = F)
manhattan(color_GWAS_hits, chr="chr", bp="ps", snp="ps", p="p_lrt")
manhattan(color_GWAS_hits, chr="scaf_num", bp="ps", snp="ps", p="p_lrt")
color_GWAS_hits$scaf_num<-as.numeric(color_GWAS_hits$scaf_num)
manhattan(color_GWAS_hits, chr="scaf_num", bp="ps", snp="ps", p="p_lrt")
manhattan(color_GWAS_hits, chr="scaf_num", bp="ps", snp="ps", p="p_wald")
manhattan(color_GWAS_hits, chr="scaf_num", bp="ps", snp="ps", p="p_score")
scaf2<-read.delim("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/Hesperis_repository/GWAS/H_matronalis.t1okay.main.complete.long_Scaf2.gff3")
View(scaf2)
gff<-read.delim("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/Hesperis_repository/GWAS/H_matronalis.t1okay.main.complete.long.gff3")
gff<-read.delim("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/Hesperis_repository/GWAS/H_matronalis.t1okay.main.complete.long.gff3")
gff<-read.delim("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/Hesperis_repository/GWAS/H_matronalis.t1okay.main.complete.long.gff3", skip=2)
gff<-read.delim("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/Hesperis_genome/Hesperis_repository/GWAS/H_matronalis.t1okay.main.complete.long.gff3", skip=2, col.names = c("scaf","source","type","start","end","score","strand","score2","attributes"))
View(subset(gff, gff$scaf=="Scaffold1"))
subset(gff, gff$scaf=="Scaffold1")
scaf1<-subset(gff, gff$scaf=="Scaffold_1")
View(scaf1)
scaf1<-subset(gff, gff$scaf=="Scaffold_1", type=="gene")
View(scaf1)
scaf1<-subset(scaf1, scaf1$type=="gene")
View(scaf1)
scaf1<-subset(gff, gff$scaf=="Scaffold_1")
scaf1<-subset(scaf1, scaf1$type=="gene")
View(scaf1)
scaf2<-subset(gff, gff$scaf=="Scaffold_2")
scaf2<-subset(scaf2, scaf2$type=="gene")
scaf5<-subset(gff, gff$scaf=="Scaffold_5")
scaf5<-subset(scaf5, scaf1$type=="gene")
View(scaf5)
scaf5<-subset(gff, gff$scaf=="Scaffold_5")
scaf5<-subset(scaf5, scaf1$type=="gene")
View(scaf5)
scaf5<-subset(gff, gff$scaf=="Scaffold_5")
scaf5<-subset(scaf5, scaf5$type=="gene")
View(scaf5)
59986403-60018148
library(tidyr)
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(tidyverse)
library(readxl)
library(dplyr)
library(tidyr)
library(stringr)
pop_locs<-read_excel("MGwgs_LatLon.xlsx") #Import
setwd("E:/Users/Joanna/Dropbox/Professional/University_of_Michigan/WGS_pipeline/Baucom_Sasha_WGS")
pop_locs<-read_excel("MGwgs_LatLon.xlsx") #Import
#pop_locs<-pop_locs%>%distinct(PopName, .keep_all = TRUE) #Keep only one copy of duplicate records
#View(pop_locs)
colnames(pop_locs)
# "PopNumber" "PopName"   "Year"      "Latitude"  "Longitude"
pop_locs$PopName
germination<-read.csv("WGS_GerminationGrowthFirstFlower.csv") #Import
colnames(germination)
#[1] "PopNumber"                      "PopName"
#[3] "Year"                           "ML"
#[5] "Rep"                            "Plant_ID"
#[7] "ShelfNumber"                    "ShelfPlacement"
#[9] "SEEWRITTENDATA.GerminationDate" "LC1"
#[11] "H1"                             "LCH1_Date"
#[13] "LC2"                            "H2"
#[15] "LCH2_Date"                      "GrowthRate_LC..LC2.LC1..days"
#[17] "GrowthRate_H..H2.H1..days"      "FirstFlower_DayInDec"
germination$Rep<-as.numeric(germination$Rep) #Convert Rep to numeric
unique(germination$PopName)
germination <- germination %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
floralmorph<-read.csv("floralmorph.csv") #Import
colnames(floralmorph)
#[1] "X"               "PopNumber"       "PopName"         "Year"            "ML"
#[6] "ShelfNumber"     "ShelfPlacement"  "CorollaWidth"    "CorollaLength"   "Stress"
#[11] "measurementWave" "Nectar"          "ID"              "ASD"             "cw_adj"
#[16] "cl_adj"          "asd_adj"         "brix_adj"        "normCW"          "normCL"
#[21] "normASD"         "normBrix"        "facYear"         "PopulationName"  "State"
#[26] "FieldType"       "Lat"             "Long"            "NumberIndsED50"
colnames(floralmorph)[13]<-"Plant_ID" #Rename column for merging
floralmorph<-floralmorph[,2:29] #drop index column
floralmorph$ML<-as.numeric(floralmorph$ML)
#Get individual means for each plant
unique(floralmorph$PopName)
floralmorph <- floralmorph %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
floralmorph_means <- floralmorph %>% select_if(., is.numeric) %>% group_by(Plant_ID, PopNumber, Year) %>%summarise_all(., mean,na.rm = TRUE) #Summarize numeric data for each plant
floralmorph_means$ML<-as.numeric(floralmorph_means$ML)
View(floralmorph_means)
seqids<-read_excel("WGS_GrowthRoomSequencing.xlsx")
unique(seqids$PopName)
seqids <- seqids %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
bamfiles<-read.delim("bam_names.txt", header = F)
test<-bamfiles %>% separate(., V1, into=c("file","Seq_ID"), sep = "S",  remove = F)
test<-bamfiles %>% separate(., V1, into=c("file",NA, NA, "Seq_ID"), sep = "S",  remove = F)
bamfiles<-read.delim("bam_names.txt", header = F)
test<-bamfiles %>% separate(., V1, into=c("file",NA, NA, "Seq_ID"), sep = "S",  remove = F)
View(test)
test<-bamfiles %>% separate(., V1, into=c("file",NA, NA, "Seq_ID"), sep = "S",  remove = F) %>% separate(., Seq_ID, into=c("Seq_ID", NA), sep=".")
bamfiles<-read.delim("bam_names.txt", header = F)
test<-bamfiles %>% separate(., V1, into=c("file",NA, NA, "Seq_ID"), sep = "S",  remove = F) %>% separate(., Seq_ID, into=c("Seq_ID", NA), sep="\.")
bamfiles<-read.delim("bam_names.txt", header = F)
test<-bamfiles %>% separate(., V1, into=c("file",NA, NA, "Seq_ID"), sep = "S",  remove = F) %>% separate(., Seq_ID, into=c("Seq_ID", NA), sep="\\.")
test$file
test<-bamfiles %>% separate(., V1, into=c(NA,NA, NA, "Seq_ID"), sep = "S",  remove = F) %>% separate(., Seq_ID, into=c("Seq_ID", NA), sep="\\.")
bamfiles<-read.delim("bam_names.txt", header = F)
test<-bamfiles %>% separate(., V1, into=c(NA,NA, NA, "Seq_ID"), sep = "S",  remove = F) %>% separate(., Seq_ID, into=c("Seq_ID", NA), sep="\\.")
test$V1
bamfiles<-read.delim("bam_names.txt", header = F)
colnames(bamfiles$V1)<-"file_name"
colnames(bamfiles$V1)
colnames(bamfiles)<-"file_name"
bamfiles<-read.delim("bam_names.txt", header = F)
colnames(bamfiles)<-"file_name"
test<-bamfiles %>% separate(., file_name, into=c(NA,NA, NA, "Seq_ID"), sep = "S",  remove = F) %>% separate(., Seq_ID, into=c("Seq_ID", NA), sep="\\.") %>% select(., c(file_name, Seq_ID))
View(test)
pop_locs<-read_excel("MGwgs_LatLon.xlsx") #Import
#pop_locs<-pop_locs%>%distinct(PopName, .keep_all = TRUE) #Keep only one copy of duplicate records
##View(pop_locs)
colnames(pop_locs)
# "PopNumber" "PopName"   "Year"      "Latitude"  "Longitude"
pop_locs$PopName
germination<-read.csv("WGS_GerminationGrowthFirstFlower.csv") #Import
colnames(germination)
#[1] "PopNumber"                      "PopName"
#[3] "Year"                           "ML"
#[5] "Rep"                            "Plant_ID"
#[7] "ShelfNumber"                    "ShelfPlacement"
#[9] "SEEWRITTENDATA.GerminationDate" "LC1"
#[11] "H1"                             "LCH1_Date"
#[13] "LC2"                            "H2"
#[15] "LCH2_Date"                      "GrowthRate_LC..LC2.LC1..days"
#[17] "GrowthRate_H..H2.H1..days"      "FirstFlower_DayInDec"
germination$Rep<-as.numeric(germination$Rep) #Convert Rep to numeric
unique(germination$PopName)
germination <- germination %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
floralmorph<-read.csv("floralmorph.csv") #Import
colnames(floralmorph)
#[1] "X"               "PopNumber"       "PopName"         "Year"            "ML"
#[6] "ShelfNumber"     "ShelfPlacement"  "CorollaWidth"    "CorollaLength"   "Stress"
#[11] "measurementWave" "Nectar"          "ID"              "ASD"             "cw_adj"
#[16] "cl_adj"          "asd_adj"         "brix_adj"        "normCW"          "normCL"
#[21] "normASD"         "normBrix"        "facYear"         "PopulationName"  "State"
#[26] "FieldType"       "Lat"             "Long"            "NumberIndsED50"
colnames(floralmorph)[13]<-"Plant_ID" #Rename column for merging
floralmorph<-floralmorph[,2:29] #drop index column
floralmorph$ML<-as.numeric(floralmorph$ML)
#Get individual means for each plant
unique(floralmorph$PopName)
floralmorph <- floralmorph %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
floralmorph_means <- floralmorph %>% select_if(., is.numeric) %>% group_by(Plant_ID, PopNumber, Year) %>%summarise_all(., mean,na.rm = TRUE) #Summarize numeric data for each plant
floralmorph_means$ML<-as.numeric(floralmorph_means$ML)
#View(floralmorph_means)
seqids<-read_excel("WGS_GrowthRoomSequencing.xlsx")
unique(seqids$PopName)
seqids <- seqids %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
bamfiles<-read.delim("bam_names.txt", header = F)
colnames(bamfiles)<-"file_name"
bamfiles<-bamfiles %>% separate(., file_name, into=c(NA,NA, NA, "Seq_ID"), sep = "S",  remove = F) %>% separate(., Seq_ID, into=c("Seq_ID", NA), sep="\\.") %>% select(., c(file_name, Seq_ID))
#View(test)
colnames(seqids)
#[1] "PopNumber" "PopName"   "Year"      "ML"        "Rep"       "Plant_ID"  "Shelf"     "Position"
#[9] "Seq_ID"    "...10"
seq_all<-seqids%>%select(c(Seq_ID,PopNumber, PopName, Year, ML, Rep, Plant_ID, Shelf, Position))
intersect(colnames(seq_all), colnames(pop_locs))
#"PopName"   "PopNumber" "Year"
seq_all<-left_join(seq_all, pop_locs, by=c("PopName","PopNumber","Year"))
intersect(colnames(seq_all), colnames(germination))
# "PopNumber" "PopName"   "Year"      "ML"        "Rep"       "Plant_ID"
seq_all<-left_join(seq_all, germination, by=c("Plant_ID", "PopNumber", "PopName", "Year", "ML", "Rep" ))
intersect(colnames(seq_all), colnames(floralmorph_means))
#[1] "PopNumber"      "Year"           "ML"             "Plant_ID"       "ShelfNumber"
#[6] "ShelfPlacement"
intersect(colnames(seq_all), colnames(bamfiles))
seq_all<-left_join(seq_all, bamfiles, by="Seq_ID")
#View(test)
bamfiles$Seq_ID<-as.numeric(bamfiles$Seq_ID)
pop_locs<-read_excel("MGwgs_LatLon.xlsx") #Import
#pop_locs<-pop_locs%>%distinct(PopName, .keep_all = TRUE) #Keep only one copy of duplicate records
##View(pop_locs)
colnames(pop_locs)
# "PopNumber" "PopName"   "Year"      "Latitude"  "Longitude"
pop_locs$PopName
germination<-read.csv("WGS_GerminationGrowthFirstFlower.csv") #Import
colnames(germination)
#[1] "PopNumber"                      "PopName"
#[3] "Year"                           "ML"
#[5] "Rep"                            "Plant_ID"
#[7] "ShelfNumber"                    "ShelfPlacement"
#[9] "SEEWRITTENDATA.GerminationDate" "LC1"
#[11] "H1"                             "LCH1_Date"
#[13] "LC2"                            "H2"
#[15] "LCH2_Date"                      "GrowthRate_LC..LC2.LC1..days"
#[17] "GrowthRate_H..H2.H1..days"      "FirstFlower_DayInDec"
germination$Rep<-as.numeric(germination$Rep) #Convert Rep to numeric
unique(germination$PopName)
germination <- germination %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
floralmorph<-read.csv("floralmorph.csv") #Import
colnames(floralmorph)
#[1] "X"               "PopNumber"       "PopName"         "Year"            "ML"
#[6] "ShelfNumber"     "ShelfPlacement"  "CorollaWidth"    "CorollaLength"   "Stress"
#[11] "measurementWave" "Nectar"          "ID"              "ASD"             "cw_adj"
#[16] "cl_adj"          "asd_adj"         "brix_adj"        "normCW"          "normCL"
#[21] "normASD"         "normBrix"        "facYear"         "PopulationName"  "State"
#[26] "FieldType"       "Lat"             "Long"            "NumberIndsED50"
colnames(floralmorph)[13]<-"Plant_ID" #Rename column for merging
floralmorph<-floralmorph[,2:29] #drop index column
floralmorph$ML<-as.numeric(floralmorph$ML)
#Get individual means for each plant
unique(floralmorph$PopName)
floralmorph <- floralmorph %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
floralmorph_means <- floralmorph %>% select_if(., is.numeric) %>% group_by(Plant_ID, PopNumber, Year) %>%summarise_all(., mean,na.rm = TRUE) #Summarize numeric data for each plant
floralmorph_means$ML<-as.numeric(floralmorph_means$ML)
#View(floralmorph_means)
seqids<-read_excel("WGS_GrowthRoomSequencing.xlsx")
unique(seqids$PopName)
seqids <- seqids %>%
mutate(PopName = str_replace(PopName, 'Mckinnon', 'McKinnon')) %>%
mutate(PopName = str_replace(PopName,  'HareRd', 'HareRoad')) #Fix alternate versions of names
bamfiles<-read.delim("bam_names.txt", header = F)
colnames(bamfiles)<-"file_name"
bamfiles<-bamfiles %>% separate(., file_name, into=c(NA,NA, NA, "Seq_ID"), sep = "S",  remove = F) %>% separate(., Seq_ID, into=c("Seq_ID", NA), sep="\\.") %>% select(., c(file_name, Seq_ID))
#View(test)
bamfiles$Seq_ID<-as.numeric(bamfiles$Seq_ID)
colnames(seqids)
#[1] "PopNumber" "PopName"   "Year"      "ML"        "Rep"       "Plant_ID"  "Shelf"     "Position"
#[9] "Seq_ID"    "...10"
seq_all<-seqids%>%select(c(Seq_ID,PopNumber, PopName, Year, ML, Rep, Plant_ID, Shelf, Position))
intersect(colnames(seq_all), colnames(pop_locs))
#"PopName"   "PopNumber" "Year"
seq_all<-left_join(seq_all, pop_locs, by=c("PopName","PopNumber","Year"))
intersect(colnames(seq_all), colnames(germination))
# "PopNumber" "PopName"   "Year"      "ML"        "Rep"       "Plant_ID"
seq_all<-left_join(seq_all, germination, by=c("Plant_ID", "PopNumber", "PopName", "Year", "ML", "Rep" ))
intersect(colnames(seq_all), colnames(floralmorph_means))
#[1] "PopNumber"      "Year"           "ML"             "Plant_ID"       "ShelfNumber"
#[6] "ShelfPlacement"
seq_all$ML<-as.numeric(seq_all$ML)
seq_all<-left_join(seq_all, floralmorph_means, by=c("Plant_ID", "PopNumber", "Year", "ShelfNumber", "ShelfPlacement")) #Omit ML because 11.24 doesn't have an ML and joining on NAs breaks it
intersect(colnames(seq_all), colnames(bamfiles))
seq_all<-left_join(seq_all, bamfiles, by="Seq_ID")
View(seq_all)
write.csv(seq_all, quote=F, row.names = F, "all_phenotypes_seq_INDs.csv")
